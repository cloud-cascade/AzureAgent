events {}
http {
  # Add error logging
  error_log /var/log/nginx/error.log debug;
  access_log /var/log/nginx/access.log;
  
  server {
    listen 80;

    # MLflow UI = /tracking (redirect /tracking to /tracking/)
    location = /tracking {
      return 301 /tracking/;
    }
    
    # MLflow UI = /tracking/ (must come before location /)
    location /tracking/ {
      # Remove /tracking from the path before forwarding to MLflow
      rewrite ^/tracking/(.*)$ /$1 break;
      
      proxy_pass http://127.0.0.1:5000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Handle redirects properly - rewrite location headers
      proxy_redirect http://127.0.0.1:5000/ /tracking/;
      proxy_redirect / /tracking/;
    }

    # Streamlit = site root (must come after specific paths)
    location / {
      proxy_pass http://127.0.0.1:8501/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
